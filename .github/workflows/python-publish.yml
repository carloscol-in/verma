# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Create Git tag
        run: |
          pip install -e .
          git tag -d $(git tag -l)
          git fetch --tags
          echo "Current version $(git tag | tail -n 1 | awk -v def="0.0.0" '{print} END { if(NR==0) {print def} }')"
          export NEW_VERSION=$(verma bump -p "fix:" -p "docs:" -m "feat:" -M "BREAKING CHANGES:")
          echo "New version will be $NEW_VERSION"
          git config user.name "GitHub Actions"
          git config user.email "github-actions@users.noreply.github.com"
          git tag $NEW_VERSION

      - name: Push tags
        uses: ad-m/github-push-action@master
        with:
          tags: true
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build package
        run: python -m build

      - name: Upload dist directory
        uses: actions/upload-artifact@v3
        with:
          name: build-distribution
          path: |
            dist/
            build/

  pypi-publish:
    name: Upload release to PyPI
    runs-on: ubuntu-latest
    needs:
      - build
    environment:
      name: production
      url: https://pypi.org/p/verma
    permissions:
      id-token: write # IMPORTANT: this permission is mandatory for trusted publishing
    steps:
      - name: Download dist directory
        uses: actions/download-artifact@v3
        with:
          name: build-distribution

      # retrieve your distributions here
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
